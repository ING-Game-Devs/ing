{

    "projects" : [],

    "cpp_objects"  : [

        {

            "name" : "ING::Engine",

            "description" : "Represents the main engine, manages all engine's systems, managers,...",

            "parent" : "ING::Utils::Board < ING::Engine > ING::ApplicationManager",
    
            "project" : "ING",

            "type" : "class",

            "constructors" : [

                {

                    "code" : "**Engine**()",

                    "description" : ""

                }

            ],

            "destructor" : {

                "code" : "~**Engine**()",

                "description" : ""

            }

            ,

            "properties" : [

                {

                    "name" : "name",

                    "type" : "ING::Utils::String",

                    "getters" : [

                        {

                            "code" : "const ING::Utils::String& **GetName**()"
                        }

                    ]

                },

                {

                    "name" : "gameDir",

                    "type" : "ING::Utils::String",

                    "getters" : [

                        {

                            "code" : "const ING::Utils::String& **GetGameDir**()"
                        }

                    ],

                    "description" : "game directory path"

                },

                {

                    "name" : "gameDir_wstr",

                    "type" : "ING::Utils::WString",

                    "getters" : [

                        {

                            "code" : "const ING::Utils::String& **GetGameDir_WSTR**()"
                        }

                    ],

                    "description" : "game directory path in wide string"

                },

                {

                    "name" : "workingDir",

                    "type" : "ING::Utils::String",

                    "getters" : [

                        {

                            "code" : "const ING::Utils::String& **GetWorkingDir**()"
                        }

                    ],

                    "description" : "current working directory path"

                },

                {

                    "name" : "workingDir_wstr",

                    "type" : "ING::Utils::WString",

                    "getters" : [

                        {

                            "code" : "const ING::Utils::String& **GetWorkingDir_WSTR**()"
                        }

                    ],

                    "description" : "current working directory path in wide string"

                },

                {

                    "name" : "rootPath2AbsolutePath",

                    "type" : "std::unordered_map<ING::Utils::WString, ING::Utils::WString>",

                    "item_getters" : [

                        {

                            "code" : "const ING::Utils::WString& **GetRootPath**(const ING::Utils::WString& rootPath)",

                            "description" : "get the value of root path"
                        },

                        {

                            "code" : "bool **IsHaveRootPath**(const ING::Utils::WString& rootPath)",

                            "description" : "check if engine has 'rootPath' root path"
                        }

                    ],

                    "item_setters" : [

                        {

                            "code" : "void **SetRootPath**(const ING::Utils::WString& name, const ING::Utils::WString& value)",

                            "description" : "set the value of root path by name and value"
                        }

                    ],

                    "description" : "root path to absolute path map"

                },

                {

                    "name" : "state",

                    "type" : "ING::EngineState",

                    "getters" : [

                        {

                            "code" : "ING::EngineState **GetState**()"
                        }

                    ]

                },

                {

                    "name" : "configuration",

                    "type" : "ING::Configuration*",

                    "getters" : [

                        {

                            "code" : "ING::Configuration* **GetConfiguration**()"
                        }

                    ]

                }

            ],

            "methods" : [
                
                {

                    "code" : "void **FrameUpdate**()",

                    "description" : "called every frame"

                }

            ],

            "macros" : [
                
                {

                    "code" : "**ING_CREATE_ENGINE**",

                    "description" : "to create the engine"

                },
                
                {

                    "code" : "**ING_INIT_ENGINE**",

                    "description" : "to init the engine"

                },
                
                {

                    "code" : "**ING_RUN_ENGINE**",

                    "description" : "to run the engine"

                },
                
                {

                    "code" : "**ING_ENGINE_CONFIG_PROP**(T, name, value)",

                    "description" : "try add new engine configuration property"

                },
                
                {

                    "code" : "**ING_ENGINE_SET_CONFIG_PROP**(T, name, value)",

                    "description" : "set engine configuration property"

                },
                
                {

                    "code" : "**ING_ENGINE_GET_CONFIG_PROP**(T, name)",

                    "description" : "get engine configuration property"

                }

            ],

            "squares" : [
                
                "ING::ApplicationManager"

            ]
    
        }

    ]

}